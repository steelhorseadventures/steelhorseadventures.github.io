"use strict";angular.module("steelhorseadventuresApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui-leaflet","ngMapAutocomplete"]).config(["$routeProvider",function(a){a.when("/home",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/tools",{templateUrl:"views/tools.html",controller:"ToolsCtrl",controllerAs:"tools"}).otherwise({redirectTo:"/home"})}]).filter("unique",function(){return function(a,b){var c,d={},e=a.length,f=[];for(c=0;c<e;c+=1)d[a[c][b]]=a[c];for(c in d)f.push(d[c]);return f}}),angular.module("steelhorseadventuresApp").controller("MainCtrl",["$scope","thingApi",function(a,b){a.things=[];var c=[],d=[];a.allTheDistance=0,b.query({org:"steelhorseadventures",repo:"sha-content",file:"things.json"},function(b){for(var e in b)!b[e].hide&&b[e].id&&(c.push.apply(c,b[e].map.paths.p1.latlngs),d.push.apply(d,b[e].countries),a.allTheDistance+=b[e].map.distance.value,a.things.push({title:b[e].title,header_picture:b[e].header_picture,countries:b[e].countries,pictures:b[e].pictures,waypoints:b[e].waypoints,summary:b[e].description,map:b[e].map,facebook:b[e].facebook,duration:["roughly "+b[e].map.duration.text,b[e].map.duration.text+" or something like that",b[e].map.duration.text+", honestly, officer",b[e].map.duration.text+", or thereabouts","maybe "+b[e].map.duration.text,"close enough to "+b[e].map.duration.text,"something like "+b[e].map.duration.text][Math.floor(7*Math.random())]}))}),a.allTheCountries=d,a.theWholeRoute={p1:{color:"#33adff",weight:5,latlngs:c}}}]),angular.module("steelhorseadventuresApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("steelhorseadventuresApp").factory("gist",["$resource",function(a){var b="https://api.github.com/users/:username/gists";return a(b,{username:"@_username",id:"@_id"},{headers:{Accept:"application/vnd.github.v3+json"},get:{url:b+"/:id"},query:{isArray:!0}})}]),angular.module("steelhorseadventuresApp").factory("thingApi",["$resource",function(a){var b="https://raw.githubusercontent.com/:org/:repo/master/:file",c=Math.ceil(c),d=Math.floor(d);return a(b+"?"+(Math.floor(Math.random()*(d-c))+c),{org:"@_org",repo:"@_repo",file:"@_file"},{get:{url:b},query:{isArray:!0}})}]),angular.module("steelhorseadventuresApp").controller("ToolsCtrl",["$scope","routeApi",function(a,b){function c(a){return void 0!=a.response}function d(a){if(!a)return[];for(var b=[],c=0,d=a.length,e=0,f=0;c<d;){var g,h=0,i=0;do{g=a.charCodeAt(c++)-63,i|=(31&g)<<h,h+=5}while(g>=32);e+=0!=(1&i)?~(i>>1):i>>1,h=0,i=0;do{g=a.charCodeAt(c++)-63,i|=(31&g)<<h,h+=5}while(g>=32);f+=0!=(1&i)?~(i>>1):i>>1,b.push([e/1e5,f/1e5])}return b}function e(a){return 180*a/Math.PI}function f(a){return a*Math.PI/180}function g(a){for(var b=0,c=0,d=0,g=0;g<a.length;g++){var h=f(a[g][0]),i=f(a[g][1]);b+=Math.cos(h)*Math.cos(i),c+=Math.cos(h)*Math.sin(i),d+=Math.sin(h)}var j=b/a.length,k=c/a.length,l=d/a.length,i=Math.atan2(k,j),m=Math.sqrt(j*j+k*k),h=Math.atan2(l,m);return[e(h),e(i)]}function h(a,b){function c(a){var b=Math.sin(a*Math.PI/180),c=Math.log((1+b)/(1-b))/2;return Math.max(Math.min(c,Math.PI),-Math.PI)/2}function d(a,b,c){return Math.floor(Math.log(a/b/c)/Math.LN2)}var e={height:256,width:256},f=(c(a.northeast.lat)-c(a.southwest.lat))/Math.PI,g=a.northeast.lng-a.southwest.lng,h=(g<0?g+360:g)/360,i=d(b.height,e.height,f),j=d(b.width,e.width,h);return Math.min(i,j,21)}a.waypoints=[{},{}],a.route={center:{lat:0,lng:0,zoom:1},paths:{p1:{color:"#33adff",weight:5,latlngs:[]}}},a.getRoute=function(e){if(e.every(c)){a.loading=!0;var f={travelMode:"DRIVING",origin:e[0].response.geometry.location.lat()+","+e[0].response.geometry.location.lng(),destination:e[e.length-1].response.geometry.location.lat()+","+e[e.length-1].response.geometry.location.lng(),waypoints:e.length>2?e.slice(1,-1).map(function(a){return a.response.geometry.location.lat()+","+a.response.geometry.location.lng()}).join("|"):""};b.get(f,function(b){a.loading=!1;var c=b.routes[0].bounds,e=b.routes[0].legs[0],i=b.routes[0].overview_polyline.points,j=d(i),k=g(j),l=h(c,{height:480,width:700});a.summary={map:{center:{lat:k[0],lng:k[1],zoom:l},bounds:c,distance:e.distance,duration:e.duration,polyline:i,paths:{p1:{color:"#33adff",weight:5,latlngs:j}}},params:f,response:b},a.route={center:{lat:k[0],lng:k[1],zoom:l},paths:{p1:{color:"#33adff",weight:5,latlngs:j}}}})}}}]),angular.module("steelhorseadventuresApp").directive("detectActiveTab",["$location",function(a){return{link:function(b,c,d){b.$on("$routeChangeSuccess",function(b,e,f){var g=d.detectActiveTab||1;(a.path().split("/")[g]||"current $location.path doesn't reach this level")===(d.href.split("/")[g]||"href doesn't include this level")?c.parent().addClass("active"):c.parent().removeClass("active")})}}}]),angular.module("steelhorseadventuresApp").factory("routeApi",["$resource",function(a){var b="https://crossorigin.me/https://maps.googleapis.com/maps/api/directions/json?origin=:origin&destination=:destination&waypoints=:waypoints&travelMode=:travelMode";return a(b,{origin:"@_origin",destination:"@_destination",waypoints:"@_waypoints",travelMode:"@_travelMode"},{get:{url:b}})}]),angular.module("steelhorseadventuresApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/main.html",'<div ng-repeat="thing in things | orderBy:\'id\':true"> <div class="timeline-panel"> <div class="timeline-heading"> <h3 ng-show="thing.title"> {{thing.title}} </h3> <h4> {{thing.map.distance.value / 1000 | number:1}} kilometres / {{thing.map.distance.value * 0.000621371 | number:1}} miles, {{thing.duration}} </h4> <div class="clearfix" style="margin-bottom: 10px"> <a href="{{country.url}}" ng-repeat="country in thing.countries"> <img src="images/flags/{{country.code}}.png" alt="flag of {{country.code}}" class="pull-left rounded" style="margin-right: 10px"> </a> </div> <a href="{{thing.header_picture}}=h1080" ng-show="thing.header_picture"> <img src="{{thing.header_picture}}=w700" class="rounded" style="margin-bottom: 10px"> </a> </div> <div class="timeline-body"> <p class="small text-muted" ng-repeat="waypoint in thing.waypoints"> <i class="glyphicon glyphicon-time"></i> {{waypoint.time}} <a href="{{waypoint.url}}" ng-show="waypoint.url"> <i class="glyphicon glyphicon-map-marker"></i> {{waypoint.place}} </a> <span ng-hide="waypoint.url"> <i class="glyphicon glyphicon-map-marker"></i> {{waypoint.place}} </span> </p> <p ng-show="thing.summary && (thing.title != thing.summary)"> {{thing.summary}} </p> <p><a href="https://www.facebook.com/rob.thijssen/posts/{{thing.facebook}}" ng-show="thing.facebook">facebook</a></p> <div style="margin-bottom: 10px"> <leaflet id="{{thing.id}}" ng-show="thing.map" lf-center="thing.map.centre" paths="thing.map.paths" width="100%" height="480px"></leaflet> </div> <div class="clearfix"> <a href="{{picture}}=h1080" ng-repeat="picture in thing.pictures"> <img src="{{picture}}=h180" class="pull-left rounded" style="margin-right: 10px; margin-bottom: 10px"> </a> </div> <ul ng-show="thing.tags" class="list-inline"> <li ng-repeat="tag in thing.tags"> <span class="badge">{{tag}}</span> </li> </ul> </div> </div> <hr> </div> <h3>The Whole Route (or rather, what I\'ve recorded so far)</h3> <h4> {{allTheDistance / 1000 | number:1}} kilometres / {{allTheDistance * 0.000621371 | number:1}} miles </h4> <div class="clearfix" style="margin-bottom: 10px"> <a href="{{country.url}}" ng-repeat="country in allTheCountries | unique: \'code\'"> <img src="images/flags/{{country.code}}.png" alt="flag of {{country.code}}" class="pull-left rounded" style="margin-right: 10px"> </a> </div> <leaflet id="theBigPicture" lf-center="{lat:40.113142,lng:1.302247,zoom:4}" paths="theWholeRoute" width="100%" height="480px"></leaflet>'),a.put("views/tools.html",'<h1>route geocoder</h1> <p>aka: drawing rude pictures on maps using nothing but your geographic intellect</p> <div class="form-group" ng-repeat="point in waypoints"> <button type="button" class="btn btn-secondary btn-xs pull-right" ng-show="$last" ng-click="waypoints.splice(waypoints.length - 1, 0, {})">+</button> <button type="button" class="btn btn-secondary btn-xs pull-right" ng-show="!$first && !$last" ng-click="waypoints.splice($index, 1)">-</button> <label> {{($first ? \'from\' : ($last ? \'to\' : \'waypoint\'))}}: <span ng-show="point.response.geometry"> {{point.response.geometry.location.lat() + \',\' + point.response.geometry.location.lng()}} </span> </label> <input type="text" class="form-control" ng-map-autocomplete ng-model="point.lookup" details="point.response"> </div> <div class="form-group clearfix" style="padding-bottom: 10px"> <button type="button" class="btn btn-primary btn-sm pull-right" ng-click="getRoute(waypoints)">get route</button> </div> <div ng-show="loading" class="spinner"> <div class="cube1"></div> <div class="cube2"></div> </div> <leaflet lf-center="route.center" paths="route.paths" width="100%" height="480px"></leaflet> <pre>{{summary | json}}</pre>')}]);